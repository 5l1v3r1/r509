test_ca: {
  ca_cert: {
    cert: 'test_ca.cer',
    key: 'test_ca.key'
  },
  crl_list: "crl_list_file.txt",
  crl_number: "crl_number_file.txt",
  crl_validity_hours: 72,
  ocsp_validity_hours: 96,
  ocsp_start_skew_seconds: 1800,
  message_digest: 'SHA1', #SHA1, SHA224, SHA256, SHA384, SHA512 supported. MD5 too, but you really shouldn't use that unless you have a good reason
  profiles: {
    server: {
      basic_constraints: { "ca" : false },
      key_usage: [digitalSignature,keyEncipherment],
      extended_key_usage: [serverAuth],
    },
    ocsp_delegate_with_no_check: {
      ocsp_no_check: true
    },
    inhibit_policy: {
      inhibit_any_policy: 2
    },
    policy_constraints: {
      policy_constraints: { require_explicit_policy: 1, inhibit_policy_mapping: 0 }
    },
    client: {
      basic_constraints: { "ca" : false },
      key_usage: [digitalSignature,keyEncipherment],
      extended_key_usage: [clientAuth],
      ocsp_no_check: false
    },
    server_with_subject_item_policy: {
      basic_constraints: { "ca" : false },
      key_usage: [digitalSignature,keyEncipherment],
      extended_key_usage: [serverAuth],
      subject_item_policy: {
        "CN" : "required",
        "O" : "optional",
        "ST" : "required",
        "C" : "required",
        "OU" : "optional" }
    }
  }
}
config_is_string: "this is bogus"
