test_ca: {
  ca_cert: {
    cert: 'test_ca.cer',
    key: 'test_ca.key'
  },
  crl_list: "crl_list_file.txt",
  crl_number: "crl_number_file.txt",
  cdp_location: 'URI:http://crl.domain.com/test_ca.crl',
  crl_validity_hours: 72,
  ocsp_validity_hours: 96,
  ocsp_start_skew_seconds: 1800,
  ocsp_location: 'URI:http://ocsp.domain.com',
  message_digest: 'SHA1', #SHA1, SHA224, SHA256, SHA384, SHA512 supported. MD5 too, but you really shouldn't use that unless you have a good reason
  profiles: {
    server: {
      basic_constraints: "CA:FALSE",
      key_usage: [digitalSignature,keyEncipherment],
      extended_key_usage: [serverAuth],
      certificate_policies: [ [ "policyIdentifier=2.16.840.1.9999999999.1.2.3.4.1", "CPS.1=http://example.com/cps"] ]
    },
    client: {
      basic_constraints: "CA:FALSE",
      key_usage: [digitalSignature,keyEncipherment],
      extended_key_usage: [clientAuth],
      certificate_policies: [ [ "policyIdentifier=2.16.840.1.9999999999.1.2.3.4.2", "CPS.1=http://example.com/cps"] ]
    },
    server_with_subject_item_policy: {
      basic_constraints: "CA:FALSE",
      key_usage: [digitalSignature,keyEncipherment],
      extended_key_usage: [serverAuth],
      certificate_policies: [ [ "policyIdentifier=2.16.840.1.9999999999.1.2.3.4.1", "CPS.1=http://example.com/cps"] ],
      subject_item_policy: {
        "CN" : "required",
        "O" : "optional",
        "ST" : "required",
        "C" : "required",
        "OU" : "optional" }
    }
  }
}
config_is_string: "this is bogus"
